{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red38\green71\blue75;\red0\green0\blue0;
\red46\green13\blue110;\red196\green26\blue22;\red63\green110\blue116;\red100\green56\blue32;\red92\green38\blue153;
\red0\green116\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c14900\c27800\c29400;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c35900\c14900\c60100;
\csgenericrgb\c0\c45600\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww33320\viewh19580\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 There are two methods ( I\'92ve found so far ) for getting the selectedDisk handle and the toolbar handle.\
\
1st: 	Swizzling a class into \cf3 SUToolbarController, replacing the -(void)revalidateToolbar and getting the handle with only one command ( ZKHookIvar )\'85  And for the selectedDisk variable we swizzle into \cf4 -(\cf2 void\cf4 )viewDidLoad function and\
			of the SUWorkspaceViewController and we get the handle.\cf3 \
		The negative is that this function gets called all the time and we can have small latency due to a check needed to determine whether should we get the handle or should we continue normally.\
\
2nd: 	Swizzling a class into SUSidebarController and replacing the function \cf4 - (\cf2 void\cf4 )initialPopulateComplete ( which is called only ONCE ) and using the code below:\
		The negative is that this code may result in slower plugin loading times\'85\cf2 \
\
\
@interface\cf4  SUWorkspaceController \cf2 @end\cf4 \
\cf2 @interface\cf4  SUWindow \cf2 @end\cf4 \
\cf2 @interface\cf4  SUToolbarController \cf2 @end\cf4 \
\
\cf2 @implementation\cf4  DUEnhance : NSObject\
\
- (\cf2 void\cf4 )initialPopulateComplete\
\{\
    \cf5 NSLog\cf4 ( \cf6 @"Got access to SUSidebarController!\\nGetting SUWorkspaceController handle ---> then SUWindow ---> then SUToolbarController ---> then NSToolbar"\cf4  );\
    \
    \cf7 SUWorkspaceController\cf4  * workspaceControllerHandle = \cf8 ZKHookIvar\cf4 ( \cf2 self\cf4 , \cf7 SUWorkspaceController\cf4 *, \cf6 "_workspaceController"\cf4  );\
    \
    \cf2 if\cf4 ( workspaceControllerHandle == \cf2 NULL\cf4  ) \cf2 goto\cf4  end;\
    \
    \cf7 SUWindow\cf4  * windowHandle = \cf8 ZKHookIvar\cf4 ( workspaceControllerHandle, \cf7 SUWindow\cf4 *, \cf6 "_mainWindow"\cf4  );\
    \
    \cf2 if\cf4 ( windowHandle == \cf2 NULL\cf4  ) \cf2 goto\cf4  end;\
    \
    \cf7 SUToolbarController\cf4  * SUToolbarControllerHandle = \cf8 ZKHookIvar\cf4 ( windowHandle, \cf7 SUToolbarController\cf4 *, \cf6 "_toolbarController"\cf4  );\
    \
    \cf2 if\cf4 ( SUToolbarControllerHandle == \cf2 NULL\cf4  ) \cf2 goto\cf4  end;\
\
    \cf9 NSToolbar\cf4  * toolbarHandle = \cf8 ZKHookIvar\cf4 ( SUToolbarControllerHandle, \cf9 NSToolbar\cf4 *, \cf6 "_toolbar"\cf4  );\
    \
    \cf5 NSLog\cf4 ( \cf6 @"%i"\cf4 , [toolbarHandle \cf5 allowsExtensionItems\cf4 ] );\
    \
end:\
    ZKOrig(\cf2 void\cf4 );\
\}\
\
\cf2 @end\cf4 \
\
\cf2 @implementation\cf4  _due_SUWorkspaceViewController : NSViewController\
\
- (\cf2 void\cf4 )viewDidLoad\
\{\
    \cf3 DUELog\cf4 ( \cf6 @"Into current WorkspaceViewController"\cf4  );\
    \cf3 DUELog\cf4 ( \cf6 @"Getting current selectedDisk handle :)"\cf4  );\
    \
    \cf7 globalSelectedDiskHandle\cf4  = \cf8 ZKHookIvar\cf4 ( \cf2 self\cf4 , \cf7 SKDisk\cf4 *, \cf6 "_disk"\cf4  );\
    \
    \cf8 ZKOrig\cf4 (\cf2 void\cf4 );\
\}\
\
\cf2 @end\cf4 \
\
\cf2 @implementation\cf4  CoreClass : NSObject\
\
+ (\cf2 void\cf4 ) load\
\{\
    \cf3 DUELog\cf4 (\cf6 @"DUEnhance plugin loading"\cf4 );\
    \
    \
    \
    \cf8 ZKSwizzle\cf4 ( \cf3 _due_SUWorkspaceViewController\cf4 , \cf3 SUWorkspaceViewController\cf4  );\
    \cf8 ZKSwizzle\cf4 ( \cf3 DUEnhance\cf4 , \cf3 SUSidebarController\cf4   );\
\}\
\
\cf10 //SUToolbarController\cf4 \
\
\cf2 @end}