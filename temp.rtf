{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green71\blue75;\red0\green0\blue0;\red196\green26\blue22;
\red100\green56\blue32;\red170\green13\blue145;\red63\green110\blue116;\red92\green38\blue153;\red0\green116\blue0;
\red46\green13\blue110;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c14900\c27800\c29400;\csgenericrgb\c0\c0\c0;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c0\c45600\c0;
\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c11000\c0\c81000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 DUELog\cf3 ( \cf4 @"Got access to the SUToolbarController"\cf3  );\
    \
    \cf5 ZKOrig\cf3 (\cf6 void\cf3 );\
    \
    \cf6 if\cf3 ( !\cf7 gotSUWorkspaceViewControllerHandle\cf3  )\
    \{\
        \cf2 DUELog\cf3 ( \cf4 @"First call: Must inject the buttons"\cf3  );\
\
        \cf8 NSToolbar\cf3  * toolbarHandle = \cf5 ZKHookIvar\cf3 ( \cf6 self\cf3 , \cf8 NSToolbar\cf3 *, \cf4 "_toolbar"\cf3  );\
\
        \cf7 gotSUWorkspaceViewControllerHandle\cf3  = \cf6 true\cf3 ;      \cf9 // set the flag so that we DONT run into this block again.\cf3 \
                                                        \cf9 // if we find out later that getting the handle failed, we don't worry\cf3 \
                                                        \cf9 //      Disk Utility will work without the Verify / Repair Permissions addon.\cf3 \
        \
        \cf6 if\cf3 ( !toolbarHandle )\
        \{\
            \cf2 DUELog\cf3 ( \cf4 @"DUEnhance HACK: Failed to get toolbarHandle"\cf3  );\
            \
            \cf8 NSAlert\cf3  *alert = [[[\cf8 NSAlert\cf3  \cf10 alloc\cf3 ] \cf10 init\cf3 ] \cf10 autorelease\cf3 ];\
            [alert \cf10 addButtonWithTitle\cf3 :\cf4 @"OK"\cf3 ];\
            [alert \cf10 setMessageText\cf3 :\cf4 @"Failed to get toolbar handle!"\cf3 ];\
            [alert \cf10 setInformativeText\cf3 :\cf4 @"Disk Utility will work without the Verify/Repair Permissions addon"\cf3 ];\
            [alert \cf10 setAlertStyle\cf3 :\cf10 NSAlertStyleCritical\cf3 ];\
            [alert \cf10 runModal\cf3 ];\
            \
\
            \cf6 return\cf3 ;                                     \cf9 // break the code, DONT reach to [toolbar insert...blabla]\cf3 \
        \}\
\
        \cf9 //\cf3 \
        \cf9 // Here we inject the buttons\cf3 \
        \cf9 //\cf3 \
        \
        \cf6 const\cf3  \cf8 NSUInteger\cf3  itemsCount = [[toolbarHandle \cf10 items\cf3 ] \cf10 count\cf3 ];\
        \cf6 const\cf3  \cf8 NSUInteger\cf3  verifyPermissionsItemIndex = itemsCount - \cf11 1\cf3 ;\
        \cf6 const\cf3  \cf8 NSUInteger\cf3  repairPermissionsItemIndex = verifyPermissionsItemIndex + \cf11 1\cf3 ;\
        \
        [toolbarHandle \cf10 insertItemWithItemIdentifier\cf3 :\cf7 kNSToolbarVerifyPermissionsItemIdentifier\cf3  \cf10 atIndex\cf3 :verifyPermissionsItemIndex];\
        [toolbarHandle \cf10 insertItemWithItemIdentifier\cf3 :\cf7 kNSToolbarRepairPermissionsItemIdentifier\cf3  \cf10 atIndex\cf3 :repairPermissionsItemIndex];\
    \}\
}